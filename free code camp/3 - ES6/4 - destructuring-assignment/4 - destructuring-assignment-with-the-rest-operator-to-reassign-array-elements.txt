

                                            ES6: Use Destructuring Assignment with the Rest Operator to Reassign Array Elements


            The result is similar to Array.prototype.slice(), as shown below:

            const [a, b, ...arr] = [1, 2, 3, 4, 5, 7];
            console.log(a, b); // 1, 2
            console.log(arr); // [3, 4, 5, 7]


            Variables a and b take the first and second values from the array. After that, because of rest operator's presence, arr gets rest of the values in the form of an array.

            The rest element only works correctly as the last variable in the list. As in, you cannot use the rest operator to catch a subarray that leaves out last element of the original array.

                                            ---------------------------------------------------------------------------------------------

            El rest element solo funciona como la ultima variable en la lista, y no puede ser usado para capturar un subrray que deje fuera el ultimo elemento del array original!......

            El rest element tomar√° todos los valores restantes del arra al que haga referencia y aun no hayan sido asignados a alguna otra variable!...

